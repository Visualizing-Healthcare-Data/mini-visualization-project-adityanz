{"version":3,"sources":["logo.svg","bar.js","line.js","scatter.js","App.js","serviceWorker.js","index.js","bar.csv"],"names":["module","exports","BarChart","this","drawChart","range","owidth","props","width","oheight","height","margin","d3","bar","then","data","console","log","xScale","padding","yScale","domain","map","d","year","value","svg","append","attr","call","selectAll","enter","i","bandwidth","xmid","xtitle","text","ytitle","id","React","Component","line","x","y","curve","datum","style","App","state","className","class","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"uJAAAA,EAAOC,QAAU,IAA0B,kC,qMCuI5BC,E,kLAjIXC,KAAKC,c,+BAGEC,GACL,OAAOA,EAAM,IAAMA,EAAM,GAAKA,EAAM,IAAM,I,kCAI5C,IAAMC,EAASH,KAAKI,MAAMC,MACpBC,EAAUN,KAAKI,MAAMG,OAEvBC,EAAe,GAAfA,EAA0B,GAA1BA,EAAsC,GAAtCA,EAAgD,GAChDH,EAAQF,EAASK,EAAcA,EAC/BD,EAASD,EAAUE,EAAaA,EAGhCC,IAAOC,KAAKC,MAAK,SAACC,GAChBC,QAAQC,IAAIF,GAEZ,IAAIG,EAASN,MACRP,MAAM,CAAC,EAAGG,IACVW,QAAQ,IAETC,EAASR,MACRP,MAAM,CAACK,EAAQ,IAGhBQ,EAAOG,OAAON,EAAKO,KAAI,SAASC,GAAK,OAAOA,EAAEC,SAC9CJ,EAAOC,OAAO,CAAC,EAAGT,IAAOG,GAAM,SAASQ,GAAK,OAAOA,EAAEE,WAEtD,IAAMC,EAAMd,IAAU,QAAQe,OAAO,OAClCC,KAAK,QAASpB,EAAQG,EAAcA,GACpCiB,KAAK,SAAUlB,EAASC,EAAaA,GACrCgB,OAAO,KACPC,KAAK,YAAa,aAAejB,EAAc,IAAMA,EAAa,KAEvEe,EAAIC,OAAO,KACNC,KAAK,QAAS,UACdA,KAAK,YAAa,eAAiBlB,EAAS,KAC5CmB,KAAKjB,IAAcM,IAExBQ,EAAIC,OAAO,KACNC,KAAK,QAAS,UACdC,KAAKjB,IAAYQ,IAEhBM,EAAII,UAAU,QACff,KAAKA,GACHgB,QAAQJ,OAAO,QACbC,KAAK,QAAS,OACdA,KAAK,KAAK,SAASL,EAAGS,GAAK,OAAOd,EAAOK,EAAEC,SAC3CI,KAAK,KAAK,SAASL,GAAK,OAAOH,EAAOG,EAAEE,UACxCG,KAAK,QAASV,EAAOe,aACrBL,KAAK,UAAU,SAASL,GAAK,OAAOb,EAASU,EAAOG,EAAEE,UACtDG,KAAK,OAAO,UAGb,IAAMM,EAAOhB,EAAOb,QAAQ,IAAMa,EAAOb,QAAQ,GAAKa,EAAOb,QAAQ,IAAM,EAIrE8B,GAFOf,EAAOf,QAAQ,GAAMe,EAAOf,QAAQ,GAAKe,EAAOf,QAAQ,GAEtDqB,EAAIC,OAAO,QACrBC,KAAK,QAAS,cACdQ,KAAK,uBAEVD,EAAOP,KAAK,cAAe,UAC3BO,EAAOP,KAAK,IAAKM,GACjBC,EAAOP,KAAK,IAAKlB,EAAO,IACxB,IAAM2B,EAASX,EAAIC,OAAO,QACvBC,KAAK,QAAS,cACdQ,KAAK,mBACNC,EAAOT,KAAK,KAAM,KAClBS,EAAOT,KAAK,KAAM,IAClBS,EAAOT,KAAK,KAAM,UAClBS,EAAOT,KAAK,cAAe,UAC3BS,EAAOT,KAAK,YAAa,oB,+BAiD3C,OAAO,yBAAKU,GAAI,IAAMnC,KAAKI,MAAM+B,S,GA7HdC,IAAMC,WC+FdtC,E,kLA7FXC,KAAKC,c,+BAGEC,GACL,OAAOA,EAAM,IAAMA,EAAM,GAAKA,EAAM,IAAM,I,kCAI5C,IAAMC,EAASH,KAAKI,MAAMC,MACpBC,EAAUN,KAAKI,MAAMG,OAEvBC,EAAe,GAAfA,EAA0B,GAA1BA,EAAsC,GAAtCA,EAAgD,GAChDH,EAAQF,EAASK,EAAcA,EAC/BD,EAASD,EAAUE,EAAaA,EAGhCC,IAAOC,KAAKC,MAAK,SAACC,GAChBC,QAAQC,IAAIF,GAEZ,IAAIG,EAASN,MACRP,MAAM,CAAC,EAAGG,IACVW,QAAQ,IAETC,EAASR,MACRP,MAAM,CAACK,EAAQ,IAG1B+B,EAAO7B,MACN8B,GAAE,SAASnB,EAAGS,GAAK,OAAOd,EAAOK,EAAEC,SACnCmB,GAAE,SAASpB,GAAK,OAAOH,EAAOG,EAAEE,UAChCmB,MAAMhC,KAIGM,EAAOG,OAAON,EAAKO,KAAI,SAASC,GAAK,OAAOA,EAAEC,SAC9CJ,EAAOC,OAAO,CAAC,EAAGT,IAAOG,GAAM,SAASQ,GAAK,OAAOA,EAAEE,WAEtD,IAAMC,EAAMd,IAAU,QAAQe,OAAO,OAClCC,KAAK,QAASpB,EAAQG,EAAcA,GACpCiB,KAAK,SAAUlB,EAASC,EAAaA,GACrCgB,OAAO,KACPC,KAAK,YAAa,aAAejB,EAAc,IAAMA,EAAa,KAEvEe,EAAIC,OAAO,KACNC,KAAK,QAAS,UACdA,KAAK,YAAa,eAAiBlB,EAAS,KAC5CmB,KAAKjB,IAAcM,IAExBQ,EAAIC,OAAO,KACNC,KAAK,QAAS,UACdC,KAAKjB,IAAYQ,IAEtBM,EAAIC,OAAO,QACVkB,MAAM9B,GACNa,KAAK,OAAQ,QACbA,KAAK,SAAU,YACfA,KAAK,eAAgB,GACrBA,KAAK,kBAAmB,SACxBA,KAAK,iBAAkB,SACvBA,KAAK,IAAKa,GAGH,IAAMP,EAAOhB,EAAOb,QAAQ,IAAMa,EAAOb,QAAQ,GAAKa,EAAOb,QAAQ,IAAM,EAIrE8B,GAFOf,EAAOf,QAAQ,GAAMe,EAAOf,QAAQ,GAAKe,EAAOf,QAAQ,GAEtDqB,EAAIC,OAAO,QACrBC,KAAK,QAAS,cACdQ,KAAK,uBAEVD,EAAOP,KAAK,cAAe,UAC3BO,EAAOP,KAAK,IAAKM,GACjBC,EAAOP,KAAK,IAAKlB,EAAO,IACxB,IAAM2B,EAASX,EAAIC,OAAO,QACvBC,KAAK,QAAS,cACdQ,KAAK,mBACNC,EAAOT,KAAK,KAAM,KAClBS,EAAOT,KAAK,KAAM,IAClBS,EAAOT,KAAK,KAAM,UAClBS,EAAOT,KAAK,cAAe,UAC3BS,EAAOT,KAAK,YAAa,oB,+BAO3C,OAAO,yBAAKU,GAAI,IAAMnC,KAAKI,MAAM+B,S,GAzFdC,IAAMC,WCyFdtC,E,kLAvFXC,KAAKC,c,+BAGEC,GACL,OAAOA,EAAM,IAAMA,EAAM,GAAKA,EAAM,IAAM,I,kCAI5C,IAAMC,EAASH,KAAKI,MAAMC,MACpBC,EAAUN,KAAKI,MAAMG,OAEvBC,EAAe,GAAfA,EAA0B,GAA1BA,EAAsC,GAAtCA,EAAgD,GAChDH,EAAQF,EAASK,EAAcA,EAC/BD,EAASD,EAAUE,EAAaA,EAGhCC,IAAOC,KAAKC,MAAK,SAACC,GAChBC,QAAQC,IAAIF,GAEZ,IAAIG,EAASN,MACRP,MAAM,CAAC,EAAGG,IACVW,QAAQ,IAETC,EAASR,MACRP,MAAM,CAACK,EAAQ,IAGhBQ,EAAOG,OAAON,EAAKO,KAAI,SAASC,GAAK,OAAOA,EAAEC,SAC9CJ,EAAOC,OAAO,CAAC,EAAGT,IAAOG,GAAM,SAASQ,GAAK,OAAOA,EAAEE,WAEtD,IAAMC,EAAMd,IAAU,QAAQe,OAAO,OAClCC,KAAK,QAASpB,EAAQG,EAAcA,GACpCiB,KAAK,SAAUlB,EAASC,EAAaA,GACrCgB,OAAO,KACPC,KAAK,YAAa,aAAejB,EAAc,IAAMA,EAAa,KAEvEe,EAAIC,OAAO,KACNC,KAAK,QAAS,UACdA,KAAK,YAAa,eAAiBlB,EAAS,KAC5CmB,KAAKjB,IAAcM,IAExBQ,EAAIC,OAAO,KACNC,KAAK,QAAS,UACdC,KAAKjB,IAAYQ,IAElBM,EAAIC,OAAO,KACNG,UAAU,OACVf,KAAKA,GACLgB,QACAJ,OAAO,UACPC,KAAK,MAAM,SAASL,GAAK,OAAOL,EAAOK,EAAEC,SACzCI,KAAK,MAAM,SAASL,GAAK,OAAOH,EAAOG,EAAEE,UACzCG,KAAK,IAAK,GACVkB,MAAM,OAAQ,aAEf,IAAMZ,EAAOhB,EAAOb,QAAQ,IAAMa,EAAOb,QAAQ,GAAKa,EAAOb,QAAQ,IAAM,EAIrE8B,GAFOf,EAAOf,QAAQ,GAAMe,EAAOf,QAAQ,GAAKe,EAAOf,QAAQ,GAEtDqB,EAAIC,OAAO,QACrBC,KAAK,QAAS,cACdQ,KAAK,uBAEVD,EAAOP,KAAK,cAAe,UAC3BO,EAAOP,KAAK,IAAKM,GACjBC,EAAOP,KAAK,IAAKlB,EAAO,IACxB,IAAM2B,EAASX,EAAIC,OAAO,QACvBC,KAAK,QAAS,cACdQ,KAAK,mBACNC,EAAOT,KAAK,KAAM,KAClBS,EAAOT,KAAK,KAAM,IAClBS,EAAOT,KAAK,KAAM,UAClBS,EAAOT,KAAK,cAAe,UAC3BS,EAAOT,KAAK,YAAa,oB,+BAQ3C,OAAO,yBAAKU,GAAI,IAAMnC,KAAKI,MAAM+B,S,GAnFdC,IAAMC,WCiDdO,G,mNA3CbC,MAAQ,CACNxC,MAAO,IACPE,OAAQ,IACR4B,GAAI,Q,uDAIJ,OACE,yBAAKW,UAAU,OAEf,6BAASC,MAAM,2BACnB,yBAAKA,MAAM,aACT,yBAAKA,MAAM,aACT,wBAAIA,MAAM,SAAV,uBACA,wBAAIA,MAAM,YAAV,mBAKE,8BACA,6BAASA,MAAM,WACf,yBAAKA,MAAM,aACT,yBAAKA,MAAM,6BACL,kBAAC,EAAD,CAAUnC,KAAMZ,KAAK6C,MAAMjC,KAAMP,MAAOL,KAAK6C,MAAMxC,MAAOE,OAAQP,KAAK6C,MAAMtC,SAC7E,kBAAC,EAAD,CAAWK,KAAMZ,KAAK6C,MAAMjC,KAAMP,MAAOL,KAAK6C,MAAMxC,MAAOE,OAAQP,KAAK6C,MAAMtC,SAC9E,kBAAC,EAAD,CAAcK,KAAMZ,KAAK6C,MAAMjC,KAAMP,MAAOL,KAAK6C,MAAMxC,MAAOE,OAAQP,KAAK6C,MAAMtC,YAIrF,4BAAQwC,MAAM,UACZ,yBAAKA,MAAM,+C,GAhCPV,cCIEW,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBjD,MAAK,SAAAkD,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLnD,QAAQmD,MAAMA,EAAMC,a,kBEzI5BpE,EAAOC,QAAU,IAA0B,kC","file":"static/js/main.0d618fc8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\nimport * as d3 from 'd3';\nimport bar from './bar.csv'\n\nclass BarChart extends React.Component {\n  componentDidMount() {\n    this.drawChart();\n  }\n\n  midpoint(range) {\n      return range[0] + (range[1] - range[0]) / 2.0;\n    }\n\n  drawChart() {\n    const owidth = this.props.width\n    const oheight = this.props.height\n\n    var margin = {top: 20, right: 20, bottom: 70, left: 60},\n        width = owidth - margin.left - margin.right,\n        height = oheight - margin.top - margin.bottom;\n\n\n        d3.csv(bar).then((data) => {\n          console.log(data);\n\n          var xScale = d3.scaleBand()\n              .range([0, width]) // output\n              .padding(0.1)\n\n          var yScale = d3.scaleLinear()\n              .range([height, 0]); // output\n\n\n              xScale.domain(data.map(function(d) { return d.year; }));\n              yScale.domain([0, d3.max(data, function(d) { return d.value; })]);\n\n              const svg = d3.select(\"body\").append(\"svg\")\n                .attr(\"width\", width + margin.left + margin.right)\n                .attr(\"height\", height + margin.top + margin.bottom)\n                .append(\"g\")\n                .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n            svg.append(\"g\")\n                .attr(\"class\", \"x axis\")\n                .attr(\"transform\", \"translate(0,\" + height + \")\")\n                .call(d3.axisBottom(xScale));\n\n            svg.append(\"g\")\n                .attr(\"class\", \"y axis\")\n                .call(d3.axisLeft(yScale));\n\n                  svg.selectAll(\"rect\")\n                .data(data)\n                  .enter().append(\"rect\")\n                    .attr(\"class\", \"bar\")\n                    .attr(\"x\", function(d, i) { return xScale(d.year) })\n                    .attr(\"y\", function(d) { return yScale(d.value) })\n                    .attr(\"width\", xScale.bandwidth())\n                    .attr(\"height\", function(d) { return height - yScale(d.value) })\n                    .attr(\"fill\",\"maroon\")\n\n\n                    const xmid = xScale.range()[0] + (xScale.range()[1] - xScale.range()[0]) / 2.0;\n                    //\n                    const ymid = yScale.range()[0] + (yScale.range()[1] - yScale.range()[0]) / 2.0;\n                    //\n                    const xtitle = svg.append('text')\n                        .attr('class', 'axis-title')\n                        .text('Registered Country');\n                    //\n                    xtitle.attr('text-anchor', 'middle');\n                    xtitle.attr('x', xmid);\n                    xtitle.attr('y', height+40);\n                    const ytitle = svg.append('text')\n                      .attr('class', 'axis-title')\n                      .text('Passenger Count')\n                      ytitle.attr('x', -210);\n                      ytitle.attr('y', -50);\n                      ytitle.attr('dy', '1.75ex');\n                      ytitle.attr('text-anchor', 'middle');\n                      ytitle.attr('transform', 'rotate(-90)');\n\n        })\n\n\n\n  //\n    // const svg = d3.select(\"body\").append(\"svg\")\n  //   .attr(\"width\", width + margin.left + margin.right)\n  //   .attr(\"height\", height + margin.top + margin.bottom)\n  // .append(\"g\")\n  //   .attr(\"transform\",\n  //         \"translate(\" + margin.left + \",\" + margin.top + \")\");\n  //\n  //         d3.csv(bar, function(error, data) {\n  //\n  //           xScale.domain(data.products.map(function(d) { return d.year; }));\n  //           yScale.domain([0, d3.max(data, function(d) { return d.value; })]);\n  //\n  //           console.log(data)\n  //\n  //         });\n\n    //   svg.selectAll(\"rect\")\n    //     .data(data)\n    //     .enter()\n    //     .append(\"rect\")\n    //     .attr(\"x\", (d, i) => i * 70)\n    //     .attr(\"y\", (d, i) => height - 10 * d)\n    //     .attr(\"width\", 65)\n    //     .attr(\"height\", (d, i) => d * 10)\n    //     .attr(\"fill\", \"green\")\n    //\n    //\n    //       svg.append(\"g\")\n    //                   .attr(\"class\", \"x axis\")\n    //                   .attr(\"transform\", \"translate(0,\" + height + \")\")\n    //                   .call(d3.axisBottom(xScale));\n    //\n    // svg.selectAll(\"text\")\n    //       .data(data)\n    //       .enter()\n    //       .append(\"text\")\n    //       .text((d) => d)\n    //       .attr(\"x\", (d, i) => i * 70)\n    //       .attr(\"y\", (d, i) => height - (10 * d) - 3)\n    }\n\n  render(){\n    return <div id={\"#\" + this.props.id}></div>\n  }\n\n\n}\n\nexport default BarChart;\n","import React from 'react';\nimport * as d3 from 'd3';\nimport bar from './bar.csv'\n\nclass BarChart extends React.Component {\n  componentDidMount() {\n    this.drawChart();\n  }\n\n  midpoint(range) {\n      return range[0] + (range[1] - range[0]) / 2.0;\n    }\n\n  drawChart() {\n    const owidth = this.props.width\n    const oheight = this.props.height\n\n    var margin = {top: 20, right: 20, bottom: 70, left: 60},\n        width = owidth - margin.left - margin.right,\n        height = oheight - margin.top - margin.bottom;\n\n\n        d3.csv(bar).then((data) => {\n          console.log(data);\n\n          var xScale = d3.scaleBand()\n              .range([0, width]) // output\n              .padding(0.1)\n\n          var yScale = d3.scaleLinear()\n              .range([height, 0]); // output\n\n\nvar line = d3.line()\n    .x(function(d, i) { return xScale(d.year); }) // set the x values for the line generator\n    .y(function(d) { return yScale(d.value); }) // set the y values for the line generator\n    .curve(d3.curveMonotoneX) // apply smoothing to the line\n\n\n\n              xScale.domain(data.map(function(d) { return d.year; }));\n              yScale.domain([0, d3.max(data, function(d) { return d.value; })]);\n\n              const svg = d3.select(\"body\").append(\"svg\")\n                .attr(\"width\", width + margin.left + margin.right)\n                .attr(\"height\", height + margin.top + margin.bottom)\n                .append(\"g\")\n                .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n            svg.append(\"g\")\n                .attr(\"class\", \"x axis\")\n                .attr(\"transform\", \"translate(0,\" + height + \")\")\n                .call(d3.axisBottom(xScale));\n\n            svg.append(\"g\")\n                .attr(\"class\", \"y axis\")\n                .call(d3.axisLeft(yScale));\n\n            svg.append(\"path\")\n            .datum(data)\n            .attr(\"fill\", \"none\")\n            .attr(\"stroke\", \"darkblue\")\n            .attr(\"stroke-width\", 4)\n            .attr(\"stroke-linejoin\", \"round\")\n            .attr(\"stroke-linecap\", \"round\")\n            .attr(\"d\", line);\n\n\n                    const xmid = xScale.range()[0] + (xScale.range()[1] - xScale.range()[0]) / 2.0;\n                    //\n                    const ymid = yScale.range()[0] + (yScale.range()[1] - yScale.range()[0]) / 2.0;\n                    //\n                    const xtitle = svg.append('text')\n                        .attr('class', 'axis-title')\n                        .text('Registered Country');\n                    //\n                    xtitle.attr('text-anchor', 'middle');\n                    xtitle.attr('x', xmid);\n                    xtitle.attr('y', height+40);\n                    const ytitle = svg.append('text')\n                      .attr('class', 'axis-title')\n                      .text('Passenger Count')\n                      ytitle.attr('x', -210);\n                      ytitle.attr('y', -50);\n                      ytitle.attr('dy', '1.75ex');\n                      ytitle.attr('text-anchor', 'middle');\n                      ytitle.attr('transform', 'rotate(-90)');\n\n        })\n\n    }\n\n  render(){\n    return <div id={\"#\" + this.props.id}></div>\n  }\n\n\n}\n\nexport default BarChart;\n","import React from 'react';\nimport * as d3 from 'd3';\nimport bar from './bar.csv'\n\nclass BarChart extends React.Component {\n  componentDidMount() {\n    this.drawChart();\n  }\n\n  midpoint(range) {\n      return range[0] + (range[1] - range[0]) / 2.0;\n    }\n\n  drawChart() {\n    const owidth = this.props.width\n    const oheight = this.props.height\n\n    var margin = {top: 20, right: 20, bottom: 70, left: 60},\n        width = owidth - margin.left - margin.right,\n        height = oheight - margin.top - margin.bottom;\n\n\n        d3.csv(bar).then((data) => {\n          console.log(data);\n\n          var xScale = d3.scaleBand()\n              .range([0, width]) // output\n              .padding(0.1)\n\n          var yScale = d3.scaleLinear()\n              .range([height, 0]); // output\n\n\n              xScale.domain(data.map(function(d) { return d.year; }));\n              yScale.domain([0, d3.max(data, function(d) { return d.value; })]);\n\n              const svg = d3.select(\"body\").append(\"svg\")\n                .attr(\"width\", width + margin.left + margin.right)\n                .attr(\"height\", height + margin.top + margin.bottom)\n                .append(\"g\")\n                .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n            svg.append(\"g\")\n                .attr(\"class\", \"x axis\")\n                .attr(\"transform\", \"translate(0,\" + height + \")\")\n                .call(d3.axisBottom(xScale));\n\n            svg.append(\"g\")\n                .attr(\"class\", \"y axis\")\n                .call(d3.axisLeft(yScale));\n\n                svg.append(\"g\")\n                    .selectAll(\"dot\")\n                    .data(data)\n                    .enter()\n                    .append(\"circle\")\n                    .attr(\"cx\", function(d) { return xScale(d.year) })\n                    .attr(\"cy\", function(d) { return yScale(d.value) })\n                    .attr(\"r\", 5)\n                    .style(\"fill\", \"darkgreen\")\n\n                    const xmid = xScale.range()[0] + (xScale.range()[1] - xScale.range()[0]) / 2.0;\n                    //\n                    const ymid = yScale.range()[0] + (yScale.range()[1] - yScale.range()[0]) / 2.0;\n                    //\n                    const xtitle = svg.append('text')\n                        .attr('class', 'axis-title')\n                        .text('Registered Country');\n                    //\n                    xtitle.attr('text-anchor', 'middle');\n                    xtitle.attr('x', xmid);\n                    xtitle.attr('y', height+40);\n                    const ytitle = svg.append('text')\n                      .attr('class', 'axis-title')\n                      .text('Passenger Count')\n                      ytitle.attr('x', -210);\n                      ytitle.attr('y', -50);\n                      ytitle.attr('dy', '1.75ex');\n                      ytitle.attr('text-anchor', 'middle');\n                      ytitle.attr('transform', 'rotate(-90)');\n\n        })\n\n\n    }\n\n  render(){\n    return <div id={\"#\" + this.props.id}></div>\n  }\n\n\n}\n\nexport default BarChart;\n","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport BarChart from './bar.js'\nimport LineChart from './line.js'\nimport ScatterChart from './scatter.js'\nimport './App.sass';\n\nclass App extends Component {\n\n  state = {\n    width: 500,\n    height: 450,\n    id: \"root\"\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n\n      <section class=\"hero is-primary is-bold\">\n  <div class=\"hero-body\">\n    <div class=\"container\">\n      <h1 class=\"title\">Mini Visualizations</h1>\n      <h2 class=\"subtitle\">Aditya Dixit</h2>\n    </div>\n  </div>\n</section>\n\n        <body>\n        <section class=\"section\">\n        <div class=\"container\">\n          <div class=\"content has-text-centered\">\n                <BarChart data={this.state.data} width={this.state.width} height={this.state.height} />\n                <LineChart data={this.state.data} width={this.state.width} height={this.state.height} />\n                <ScatterChart data={this.state.data} width={this.state.width} height={this.state.height} />\n            </div>\n            </div>\n            </section>\n            <footer class=\"footer\">\n              <div class=\"content has-text-centered is-size-7\">\n\n\n            </div>\n            </footer>\n\n        </body>\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/bar.924f78c5.csv\";"],"sourceRoot":""}